---- -*- Mode: rpl; -*-                                                                             
---- vim:syn=rosie
----
---- time.rpl    Common time patterns in Rosie Pattern Language
----
---- Â© Copyright IBM Corporation 2016, 2017.
---- LICENSE: MIT License (https://opensource.org/licenses/mit-license.html)
---- AUTHORS: Jamie A. Jennings, Kevin Zander

--
-- RFC3339
--

--   date-fullyear   = 4DIGIT
--   date-month      = 2DIGIT  ; 01-12
--   date-mday       = 2DIGIT  ; 01-28, 01-29, 01-30, 01-31 based on
--                             ; month/year
--   time-hour       = 2DIGIT  ; 00-23
--   time-minute     = 2DIGIT  ; 00-59
--   time-second     = 2DIGIT  ; 00-58, 00-59, 00-60 based on leap second
--                             ; rules
--   time-secfrac    = "." 1*DIGIT
--   time-numoffset  = ("+" / "-") time-hour ":" time-minute
--   time-offset     = "Z" / time-numoffset
--
--   partial-time    = time-hour ":" time-minute ":" time-second
--                     [time-secfrac]
--   full-date       = date-fullyear "-" date-month "-" date-mday
--   full-time       = partial-time time-offset
--
--   date-time       = full-date "T" full-time
--
-- Notes:
-- T and Z may be lowercase.
-- The "T" separator in the date-time rule can be a space instead.

--import core (for digit)
-- local until import
alias time.d = [:digit:]

-- RFC3339 patterns
time.hour = { { [01] [0-9] } /
              { "2"  [0-3] } }
time.minute = { [0-5] [0-9] }
time.second = { { [0-5] [0-9] } /
                "60"            }     -- time_second must match 60 for leap second
time.secfrac = { "." time.d+ }
time.numoffset = { [+-] time.hour ":" time.minute }
time.offset = { [Zz] / time.numoffset }
time.partial = { time.hour ":" time.minute ":" time.second time.secfrac? }

time.full = { time.partial time.offset }
time.time = { time.partial time.offset }

-- RFC2822 (Alternative patterns, less exact than RFC3339)
time.althour = time.d{2,2}
time.altminute = time.d{2,2}
time.altsecond = time.d{2,2}
time.altzone = { [+-] time.d{4,4} }
time.alttimeofday = { time.althour ":" time.altminute { ":" time.altsecond }? }
time.alttime = time.alttimeofday time.altzone
